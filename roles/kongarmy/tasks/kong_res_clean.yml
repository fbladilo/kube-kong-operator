---
- set_fact:
    kong_requested_resource:
      kind: "{{ kong_resource.get('kind', 'unsupported') | string | lower }}"
      count: "{{ kong_resource.get('count', 1) }}"
      definition: "{{ kong_resource.get('definition', {}) }}"

- set_fact:
    requested_resource_supported: "{{ kong_requested_resource.kind in supported_resources.keys() }}"

- when: 
  - kong_requested_resource.definition == {}
  - requested_resource_supported|bool
  ignore_errors: true
  block:
  - name: "Cleaning up resource"
    vars:
      resource_name: "kong-{{ res_idx }}"
    k8s:
      state: absent
      definition: "{{ lookup('template', kong_requested_resource.kind + '.yml.j2') }}"
    with_sequence: start=1 end={{ kong_requested_resource.count }}
    loop_control:
      loop_var: res_idx

- when: 
  - kong_requested_resource.definition != {}
  ignore_errors: true
  block:
  - name: "Cleaning up resource"
    vars:
      kong_metadata:
        metadata:
          name: "kong-{{ res_idx }}"
          namespace: "{{ meta.namespace }}"
    k8s:
      state: absent
      definition: "{{ kong_requested_resource.definition | 
        combine(kong_labels, recursive=true) |
        combine(kong_metadata, recursive=true)
      }}"
    with_sequence: start=1 end={{ kong_requested_resource.count }}
    loop_control:
      loop_var: res_idx
